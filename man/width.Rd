% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/width.R
\name{width}
\alias{width}
\alias{print.width}
\title{Calculate interval forecast width}
\usage{
width(
  object,
  ...,
  level = 95,
  includemedian = FALSE,
  window = NULL,
  na.rm = TRUE
)
}
\arguments{
\item{object}{An object of class \code{cvforecast} or \code{cpforecast}.}

\item{...}{Additional inputs if \code{object} is missing.}

\item{level}{Target confidence level for prediction intervals.}

\item{includemedian}{If \code{TRUE}, the median interval width will also be returned.}

\item{window}{If not \code{NULL}, the rolling mean (and median if applicable)
matrix for interval width is also returned.}

\item{na.rm}{A logical indicating whether \code{NA} values should be stripped
before the mean or rolling mean computation proceeds.}
}
\value{
A list of class \code{"width"} with the following components:
\item{width}{Forecast interval width as a multivariate time series, where the \eqn{h}th
column holds the interval width for forecast horizon \eqn{h}. The time index
corresponds to the period for which the forecast is produced.}
\item{mean}{The mean interval width across the validation set (and test set
if applicable).}
\item{rollmean}{If \code{window} is not NULL, a rolling mean interval width
will be returned.}
\item{median}{The median interval width across the validation set (and test set
if applicable).}
\item{rollmedian}{If \code{window} is not NULL, a rolling median interval width
will be returned.}
}
\description{
Calculate the mean width of prediction intervals on validation set (and test
set if applicable). If \code{window} is not \code{NULL}, the rolling mean
matrix for interval width is also returned. If \code{includemedian} is \code{TRUE},
the median interval width information will also be returned.
}
\examples{
# Simulate time series from an AR(2) model
library(forecast)
series <- arima.sim(n = 1000, list(ar = c(0.8, -0.5)), sd = sqrt(1))
series <- as.numeric(series)

# Cross-validation forecasting with a rolling window of length 100
far2 <- function(x, h, level) {
  Arima(x, order = c(2, 0, 0)) |>
    forecast(h = h, level)
}
fc <- cvforecast(series, forecastfun = far2, h = 3, level = c(80, 95),
                 forward = TRUE, initial = 1, window = 100)

# Mean and rolling mean width for interval forecasts on validation and test sets
wid_fc <- width(fc, level = 95, window = 100)
str(wid_fc)

}
